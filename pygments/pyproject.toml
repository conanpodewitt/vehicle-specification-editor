[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pygments-plugin-vse" # change this to a package name for your plugin
version = "0.1.0"
dependencies = ["pygments"]
readme = "README.md"


# Declare plugin lexers in this table. The key (like `example_lexer` below) are
# not significant. The value has the form `module_name:ClassName`. The lexer
# class will be imported using `from module_name import ClassName`.

# See the attributes declared in example_lexer.py for how to configure the
# language names and file patterns.

[project.entry-points."pygments.lexers"]
external = "external:ExternalLexer"

# Declare plugin styles in this table. The key *is* significant: it is the name
# the style will be recognized as. In this example, we can use
#
#   pygmentize -Ostyle=example-style"
#
# on the command line. Also,
#
#   pygments.styles.get_style_by_name("example-style")
#
# will return the style class.

[project.entry-points."pygments.styles"]
vse-style = "vse_style:VSE"

# This is a test command. Running it should print:
#
# [ff0000]foo
# [black]<tab><tab>bar # tabs here
#
# - Our custom lexer highlights "foo" as keyword,
# - Our custom style uses red (ff0000) for keywords,
# - Our custom formatter prints colors in brackets,
# - Our custom filter replaces tabs with "<tab>".
#
# Run with
#
#   hatch run test

#[tool.hatch.envs.default.scripts]
#test = "pygmentize -l python style=vse-style"

[tool.hatch.build.targets.wheel]
packages = ["vse_style.py", "external.py"]